/*
 *  Vide - v0.5.0
 *  Easy as hell jQuery plugin for video backgrounds.
 *  http://vodkabears.github.io/vide/
 *
 *  Made by Ilya Makarov
 *  Under MIT License
 */
!function(a,b){"function"==typeof define&&define.amd?define(["jquery"],b):b("object"==typeof exports?require("jquery"):a.jQuery)}(this,function(a){"use strict";/**
   * Parse a string with options
   * @private
   * @param {String} str
   * @returns {Object|String}
   */
function b(a){var b,c,d,e,f,g,h,i={};
// Parse a string
for(
// Remove spaces around delimiters and split
f=a.replace(/\s*:\s*/g,":").replace(/\s*,\s*/g,",").split(","),h=0,g=f.length;h<g&&(c=f[h],c.search(/^(http|https|ftp):\/\//)===-1&&c.search(":")!==-1);h++)b=c.indexOf(":"),d=c.substring(0,b),e=c.substring(b+1),
// If val is an empty string, make it undefined
e||(e=void 0),
// Convert a string value if it is like a boolean
"string"==typeof e&&(e="true"===e||"false"!==e&&e),
// Convert a string value if it is like a number
"string"==typeof e&&(e=isNaN(e)?e:+e),i[d]=e;
// If nothing is parsed
// If nothing is parsed
return null==d&&null==e?a:i}/**
   * Parse a position option
   * @private
   * @param {String} str
   * @returns {Object}
   */
function c(a){a=""+a;
// Default value is a center
var b,c,d,e=a.split(/\s+/),f="50%",g="50%";for(d=0,b=e.length;d<b;d++)c=e[d],
// Convert values
"left"===c?f="0%":"right"===c?f="100%":"top"===c?g="0%":"bottom"===c?g="100%":"center"===c?0===d?f="50%":g="50%":0===d?f=c:g=c;return{x:f,y:g}}/**
   * Search a poster
   * @private
   * @param {String} path
   * @param {Function} callback
   */
function d(b,c){var d=function(){c(this.src)};a('<img src="'+b+'.gif">').on("load",d),a('<img src="'+b+'.jpg">').on("load",d),a('<img src="'+b+'.jpeg">').on("load",d),a('<img src="'+b+'.png">').on("load",d)}/**
   * Vide constructor
   * @param {HTMLElement} element
   * @param {Object|String} path
   * @param {Object|String} options
   * @constructor
   */
function e(c,d,e){
// Remove an extension
if(this.$element=a(c),
// Parse path
"string"==typeof d&&(d=b(d)),
// Parse options
e?"string"==typeof e&&(e=b(e)):e={},"string"==typeof d)d=d.replace(/\.\w*$/,"");else if("object"==typeof d)for(var f in d)d.hasOwnProperty(f)&&(d[f]=d[f].replace(/\.\w*$/,""));this.settings=a.extend({},g,e),this.path=d;
// https://github.com/VodkaBears/Vide/issues/110
try{this.init()}catch(a){if(a.message!==h)throw a}}/**
   * Name of the plugin
   * @private
   * @const
   * @type {String}
   */
var f="vide",g={volume:1,playbackRate:1,muted:!0,loop:!0,autoplay:!0,position:"50% 50%",posterType:"detect",resizing:!0,bgColor:"transparent",className:""},h="Not implemented";/**
   * Initialization
   * @public
   */
e.prototype.init=function(){var b,e,f=this,g=f.path,i=g,j="",k=f.$element,l=f.settings,m=c(l.position),n=l.posterType;
// Set styles of a video wrapper
e=f.$wrapper=a("<div>").addClass(l.className).css({position:"absolute","z-index":-1,top:0,left:0,bottom:0,right:0,overflow:"hidden","-webkit-background-size":"cover","-moz-background-size":"cover","-o-background-size":"cover","background-size":"cover","background-color":l.bgColor,"background-repeat":"no-repeat","background-position":m.x+" "+m.y}),
// Get a poster path
"object"==typeof g&&(g.poster?i=g.poster:g.mp4?i=g.mp4:g.webm?i=g.webm:g.ogv&&(i=g.ogv)),
// Set a video poster
"detect"===n?d(i,function(a){e.css("background-image","url("+a+")")}):"none"!==n&&e.css("background-image","url("+i+"."+n+")"),
// If a parent element has a static position, make it relative
"static"===k.css("position")&&k.css("position","relative"),k.prepend(e),"object"==typeof g?(g.mp4&&(j+='<source src="'+g.mp4+'.mp4" type="video/mp4">'),g.webm&&(j+='<source src="'+g.webm+'.webm" type="video/webm">'),g.ogv&&(j+='<source src="'+g.ogv+'.ogv" type="video/ogg">'),b=f.$video=a("<video>"+j+"</video>")):b=f.$video=a('<video><source src="'+g+'.mp4" type="video/mp4"><source src="'+g+'.webm" type="video/webm"><source src="'+g+'.ogv" type="video/ogg"></video>');
// https://github.com/VodkaBears/Vide/issues/110
try{b.prop({autoplay:l.autoplay,loop:l.loop,volume:l.volume,muted:l.muted,defaultMuted:l.muted,playbackRate:l.playbackRate,defaultPlaybackRate:l.playbackRate})}catch(a){throw new Error(h)}
// Video alignment
b.css({margin:"auto",position:"absolute","z-index":-1,top:m.y,left:m.x,"-webkit-transform":"translate(-"+m.x+", -"+m.y+")","-ms-transform":"translate(-"+m.x+", -"+m.y+")","-moz-transform":"translate(-"+m.x+", -"+m.y+")",transform:"translate(-"+m.x+", -"+m.y+")",
// Disable visibility, while loading
visibility:"hidden",opacity:0}).one("canplaythrough.vide",function(){f.resize()}).one("playing.vide",function(){b.css({visibility:"visible",opacity:1}),e.css("background-image","none")}),
// Resize event is available only for 'window'
// Use another code solutions to detect DOM elements resizing
k.on("resize.vide",function(){l.resizing&&f.resize()}),
// Append a video
e.append(b)},/**
   * Get a video element
   * @public
   * @returns {HTMLVideoElement}
   */
e.prototype.getVideoObject=function(){return this.$video[0]},/**
   * Resize a video background
   * @public
   */
e.prototype.resize=function(){if(this.$video){var a=this.$wrapper,b=this.$video,c=b[0],d=c.videoHeight,e=c.videoWidth,f=a.height(),g=a.width();g/e>f/d?b.css({
// +2 pixels to prevent an empty space after transformation
width:g+2,height:"auto"}):b.css({width:"auto",
// +2 pixels to prevent an empty space after transformation
height:f+2})}},/**
   * Destroy a video background
   * @public
   */
e.prototype.destroy=function(){delete a[f].lookup[this.index],this.$video&&this.$video.off(f),this.$element.off(f).removeData(f),this.$wrapper.remove()},/**
   * Special plugin object for instances.
   * @public
   * @type {Object}
   */
a[f]={lookup:[]},/**
   * Plugin constructor
   * @param {Object|String} path
   * @param {Object|String} options
   * @returns {JQuery}
   * @constructor
   */
a.fn[f]=function(b,c){var d;return this.each(function(){d=a.data(this,f),
// Destroy the plugin instance if exists
d&&d.destroy(),
// Create the plugin instance
d=new e(this,b,c),d.index=a[f].lookup.push(d)-1,a.data(this,f,d)}),this},a(document).ready(function(){var b=a(window);
// Window resize event listener
b.on("resize.vide",function(){for(var b,c=a[f].lookup.length,d=0;d<c;d++)b=a[f].lookup[d],b&&b.settings.resizing&&b.resize()}),
// https://github.com/VodkaBears/Vide/issues/68
b.on("unload.vide",function(){return!1}),
// Auto initialization
// Add 'data-vide-bg' attribute with a path to the video without extension
// Also you can pass options throw the 'data-vide-options' attribute
// 'data-vide-options' must be like 'muted: false, volume: 0.5'
a(document).find("[data-vide-bg]").each(function(b,c){var d=a(c),e=d.data("vide-options"),g=d.data("vide-bg");d[f](g,e)})})});